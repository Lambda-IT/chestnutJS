export type Log = {
    child(options: any, simple?: boolean): Log;
    child(obj: Object, simple?: boolean): Log;
    trace(): boolean;
    trace(error: Error, format?: any, ...params: any[]): void;
    trace(buffer: Buffer, format?: any, ...params: any[]): void;
    trace(format: string | number, ...params: any[]): void;
    trace(obj: Object, format?: any, ...params: any[]): void;
    debug(): boolean;
    debug(error: Error, format?: any, ...params: any[]): void;
    debug(buffer: Buffer, format?: any, ...params: any[]): void;
    debug(format: string | number, ...params: any[]): void;
    debug(obj: Object, format?: any, ...params: any[]): void;
    info(): boolean;
    info(error: Error, format?: any, ...params: any[]): void;
    info(buffer: Buffer, format?: any, ...params: any[]): void;
    info(format: string | number, ...params: any[]): void;
    info(obj: Object, format?: any, ...params: any[]): void;
    warn(): boolean;
    warn(error: Error, format?: any, ...params: any[]): void;
    warn(buffer: Buffer, format?: any, ...params: any[]): void;
    warn(format: string | number, ...params: any[]): void;
    warn(obj: Object, format?: any, ...params: any[]): void;
    error(): boolean;
    error(error: Error, format?: any, ...params: any[]): void;
    error(buffer: Buffer, format?: any, ...params: any[]): void;
    error(format: string | number, ...params: any[]): void;
    error(obj: Object, format?: any, ...params: any[]): void;
    fatal(): boolean;
    fatal(error: Error, format?: any, ...params: any[]): void;
    fatal(buffer: Buffer, format?: any, ...params: any[]): void;
    fatal(format: string | number, ...params: any[]): void;
    fatal(obj: Object, format?: any, ...params: any[]): void;
};
